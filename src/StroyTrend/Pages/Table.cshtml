@page "{projectId::int}"
@using StroyTrend.Pages.Controls
@model StroyTrend.Pages.TableModel

@{
    var tabs = new List<(string name, string fullPath)>()
    {
        ("Index", string.Empty),
        ("Table", $"Table/{Model.ProjectId}"),
        ("About", $"About/{Model.ProjectId}"),
    };
}

<partial name="@ProjectNavigationControlModel.ViewPath" model="new ProjectNavigationControlModel(tabs)" />

<table border="0px">
    <tr>
        <td><p>From</p></td>
        <td><input type="datetime-local" class="date-from" value="1990-01-01T00:00" /></td>
    </tr>

    <tr>
        <td><p>To</p></td>
        <td><input type="datetime-local" class="date-to" value="2200-01-01T00:00" /></td>
    </tr>

    <tr>
        <td><p>Distribution</p></td>
        <td><select name="distribution" class="select-distribution"></select></td>
    </tr>
</table>

<div class="project-table"></div>

<script>
    onDocumentInitialized(async () => {
        await initializeDistribution();

        $('.date-from').on('change', fetchAndRerender);
        $('.date-to').on('change', fetchAndRerender);
        $('.select-distribution').on('change', fetchAndRerender);

        await fetchAndRerender();
    });

    function getRequestData() {
        const request = {
            from: new Date($('.date-from').val()).toJSON(),
            to: new Date($('.date-to').val()).toJSON(),
            distributionId: Number($('.select-distribution').val())
        }

        return request;
    }

    async function initializeDistribution() {
        const response = await fetch('https://localhost:7234/entries/distributions', {
            method: "GET",
        });
        const distributions = await response.json();

        let selected = true;
        for (const distribution in distributions) {
            const distributionId = distributions[distribution];
            $('.select-distribution').append(`<option value='${distributionId}' ${selected ? 'selected' : ''}>${distribution}</option>`);
            selected = false;
        }
    }

    async function fetchAndRerender() {
        $('.project-table').empty();

        const entryResult = await getEntryResult();
        const total = entryResult.total;
        const records = entryResult.records;

        $('.project-table').append(`<h2>Total: ${total}</h2>`).append('<br>');

        for (const record in records) {
            const innerDiv = $('<div>');
            const keyValuePairs = records[record];

            for (const key in keyValuePairs) {
                const value = keyValuePairs[key];
                innerDiv.append(`<p style="margin-left: 1em">${key}: ${value}</p>`);
            }

            $('.project-table').append($('<div>').append(`<h3>${record}</h3>`).append(innerDiv));
        }
    }

    async function getEntryResult() {
        const requestData = getRequestData();

        const response = await fetch('https://localhost:7234/entries?projectId=@Model.ProjectId', {
            method: "POST",
            body: JSON.stringify(requestData),
            headers: {
                "Content-Type": "application/json",
            },
        });

        const result = await response.json();

        return result;
    }
</script>